name: Version, build, publish

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'Cargo.toml'
  workflow_dispatch:

jobs:

  # Determine the next version from commits (if any)
  semantic_release_dry_run:
    name: Semantic Release (dry run)
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Maybe load the cache
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-semantic-release-${{ hashFiles('package-lock.json') }}

      # Install node.js (npm)
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 18

      # Install packages
      - run: npm install

      # Run semantic release to determine the next version
      - run: npx semantic-release --dry-run
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      version: ${{ steps.semantic_release.outputs.version }}
      previous: ${{ steps.semantic_release.outputs.previous }}

  test_rust:
    name: Build Rust
    needs: semantic_release_dry_run
    if: needs.semantic_release_dry_run.outputs.version != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Download the new version
      - uses: actions/download-artifact@v3
        with:
          name: semantic-release

      # Run all tests
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --release --all-features


  semantic_release_publish:
    name: Publish to GitHub
    needs: test_rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Run and publish
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 18
      - run: npm install
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload_crates:
    name: Publish to crates.io
    needs: semantic_release_publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: semantic-release
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo publish --allow-dirty --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
